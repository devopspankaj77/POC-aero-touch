name: CI/CD Build & Deploy

# ðŸ‘‡ trigger on push to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:   # manual trigger bhi allow karega

env:
  IMAGE_TAG: ${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build & push backend image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./backend
  #         file: ./backend/Dockerfile
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ env.IMAGE_TAG }}
  #           ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

  #     - name: Build & push frontend image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./frontend
  #         file: ./frontend/Dockerfile
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }}
  #           ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Install kubectl
  #       uses: azure/setup-kubectl@v4
  #       with:
  #         version: 'latest'

  #     - name: Restore kubeconfig from secret (base64)
  #       run: |
  #         mkdir -p $HOME/.kube
  #         echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
  #         chmod 600 $HOME/.kube/config

  #     - name: Apply k8s manifests
  #       run: |
  #         kubectl apply -f k8s/

  #     - name: Update deployments with new images
  #       run: |
  #         kubectl set image deployment/backend backend=${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ env.IMAGE_TAG }} --record || true
  #         kubectl set image deployment/frontend frontend=${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }} --record || true
